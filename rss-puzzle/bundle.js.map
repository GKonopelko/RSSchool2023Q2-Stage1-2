{"version":3,"file":"bundle.js","mappings":"mBAsBA,SAASA,EAAaC,EAAWC,GAC7B,MAAMC,EAAUF,EAAUG,cAAcF,GACxC,GAAgB,OAAZC,EACA,MAAM,IAAIE,MAAM,4BACpB,OAAOF,CACX,CAvBoBG,SAASC,KAgBjBC,WAbK,gbAqBjB,MAAM,EAAOR,EAAaM,SAAU,QACpC,EAAKG,iBAAiB,UAAWC,IAC7BA,EAAEC,iBACF,MAAMC,EC/Bc,CAACC,IACrB,MAAMC,EAASD,EAAKE,iBAAiB,SAC/BC,EAAS,CAAC,EAIhB,OAHAF,EAAOG,SAASC,IACZF,EAAOE,EAAMC,IAAMD,EAAME,KAAK,IAE3BJ,CAAM,EDyBAK,CAAS,GACtBC,QAAQC,IAAIX,EAAK,IAErB,MAAMM,EAAQ,EAAKH,iBAAiB,SAC9B,EAAOf,EAAaM,SAAU,SAC9BkB,EAAUxB,EAAaM,SAAU,YACjCmB,EAAczB,EAAaM,SAAU,gBACrCoB,EAAiB1B,EAAaM,SAAU,mBAC9C,GAAc,OAAVY,EACA,MAAM,IAAIb,MAAM,4BACpB,MAAM,EAAS,EAAKD,cAAc,gBAClC,GAAe,OAAX,EACA,MAAM,IAAIC,MAAM,4BACpB,EAAKI,iBAAiB,SAAUC,IAC5BA,EAAEC,iBACFc,EAAYjB,UAAY,GACxBkB,EAAelB,UAAY,GAC3B,EAAOmB,UAAUC,OAAO,UACxB,MAAMC,EAAe,iBACjB,EAAKT,MAAMU,OAAS,IACpBL,EAAYjB,WAAa,kCAExBqB,EAAaE,KAAK,EAAKX,SACxBK,EAAYjB,WAAa,6DAExBqB,EAAaE,KAAKP,EAAQJ,SAC3BM,EAAelB,WAAa,6DAE5BgB,EAAQJ,MAAMU,OAAS,IACvBJ,EAAelB,WAAa,kCAE5B,EAAKY,MAAMU,QAAU,GACrBN,EAAQJ,MAAMU,QAAU,GACxBD,EAAaE,KAAKP,EAAQJ,QAC1BS,EAAaE,KAAK,EAAKX,SACvB,EAAOO,UAAUK,IAAI,UACrBP,EAAYjB,UAAY,GACxBkB,EAAelB,UAAY,GAEzB,G","sources":["webpack://rss-puzzle/./src/index.ts","webpack://rss-puzzle/./src/forms.ts"],"sourcesContent":["// // import \"./global.css\";\n// import { Button } from \"./constructor\";\n// import { Component } from \"./constructor\";\n// ///////////\nconst bodyElement = document.body;\nconst title = \"Login Page\";\nconst content = \"Please, enter your first name and last name (use letters of the Latin alphabet)\";\nconst template = `\r\n<h1>${title}</h1>\r\n<p>${content}</p>\r\n<form>\r\n<label for=\"name\">First Name</label>\r\n<input type=\"text\" id=\"name\" required>\r\n<span class=\"tooltip\" id=\"nameTooltip\"> </span>\r\n<label for=\"surname\">Surname</label>\r\n<input type=\"text\" id=\"surname\" required>\r\n<span class=\"tooltip\" id=\"surnameTooltip\"> </span>\r\n<button id=\"loginButton\">Login</button>\r\n</form>\r\n`;\nbodyElement.innerHTML += template;\nimport { formData } from \"./forms\";\nfunction queryNonNull(container, selector) {\n    const element = container.querySelector(selector);\n    if (element === null)\n        throw new Error(\"Error: element not found\");\n    return element;\n}\nconst form = queryNonNull(document, \"form\");\nform.addEventListener(\"submit\", (e) => {\n    e.preventDefault();\n    const data = formData(form);\n    console.log(data);\n});\nconst input = form.querySelectorAll(\"input\");\nconst name = queryNonNull(document, \"#name\");\nconst surname = queryNonNull(document, \"#surname\");\nconst nameTooltip = queryNonNull(document, \"#nameTooltip\");\nconst surnameTooltip = queryNonNull(document, \"#surnameTooltip\");\nif (input === null)\n    throw new Error(\"Error: element not found\");\nconst button = form.querySelector(\"#loginButton\");\nif (button === null)\n    throw new Error(\"Error: element not found\");\nform.addEventListener(\"input\", (e) => {\n    e.preventDefault();\n    nameTooltip.innerHTML = \"\";\n    surnameTooltip.innerHTML = \"\";\n    button.classList.remove(\"active\");\n    const validSymbols = /^[A-Z][a-z-]*$/;\n    if (name.value.length < 3) {\n        nameTooltip.innerHTML += ` Minimum length 3 characters. `;\n    }\n    if (!validSymbols.test(name.value)) {\n        nameTooltip.innerHTML += ` English alphabet letters and first letter in uppercase. `;\n    }\n    if (!validSymbols.test(surname.value)) {\n        surnameTooltip.innerHTML += ` English alphabet letters and first letter in uppercase. `;\n    }\n    if (surname.value.length < 4) {\n        surnameTooltip.innerHTML += ` Minimum length 4 characters. `;\n    }\n    if (name.value.length >= 3 &&\n        surname.value.length >= 4 &&\n        validSymbols.test(surname.value) &&\n        validSymbols.test(name.value)) {\n        button.classList.add(\"active\");\n        nameTooltip.innerHTML = \"\";\n        surnameTooltip.innerHTML = \"\";\n    }\n    return;\n});\n","export const formData = (form) => {\n    const inputs = form.querySelectorAll(\"input\");\n    const values = {};\n    inputs.forEach((input) => {\n        values[input.id] = input.value;\n    });\n    return values;\n};\n"],"names":["queryNonNull","container","selector","element","querySelector","Error","document","body","innerHTML","addEventListener","e","preventDefault","data","form","inputs","querySelectorAll","values","forEach","input","id","value","formData","console","log","surname","nameTooltip","surnameTooltip","classList","remove","validSymbols","length","test","add"],"sourceRoot":""}